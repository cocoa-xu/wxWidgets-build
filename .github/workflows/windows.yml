name: wxwidgets-windows

on:
  workflow_dispatch:
    inputs:
      verison:
        description: 'wxWidgets Version'
        required: true
      webview2_version:
        description: 'WebView2 Version'
        required: true
        default: '1.0.2277.86'
      build_arm64:
        description: 'Build ARM64'
        required: false
        default: 'true'
      build_x86_64:
        description: 'Build x86_64'
        required: false
        default: 'true'
      build_i686:
        description: 'Build i686'
        required: false
        default: 'true'
  push:
    tags:
        - 'v*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  windows:
    runs-on: windows-2019
    env:
      DEFAULT_WEBVIEW2_VERSION: "1.0.2277.86"
    strategy:
      fail-fast: false
      matrix:
        job:
          - {
              target: "aarch64-windows-msvc",
              runs-on: "windows-2019",
              library: "shared",
              shared: "1",
              arch: "aarch64",
              cpu: "arm64",
              out_dir: "vc_arm64_dll",
              vcvarsall: "amd64_arm64"
            }
          - {
              target: "aarch64-windows-msvc",
              runs-on: "windows-2019",
              library: "static",
              shared: "0",
              arch: "aarch64",
              cpu: "arm64",
              out_dir: "vc_arm64_lib",
              vcvarsall: "amd64_arm64"
            }
          - {
              target: "x86_64-windows-msvc",
              runs-on: "windows-2019",
              library: "shared",
              shared: "1",
              arch: "x86_64",
              cpu: "amd64",
              out_dir: "vc_x64_dll",
              vcvarsall: "x64"
            }
          - {
              target: "x86_64-windows-msvc",
              runs-on: "windows-2019",
              library: "static",
              shared: "0",
              arch: "x86_64",
              cpu: "amd64",
              out_dir: "vc_x64_lib",
              vcvarsall: "x64"
            }
          - {
              target: "i686-windows-msvc",
              runs-on: "windows-2019",
              library: "shared",
              shared: "1",
              arch: "x86",
              cpu: "x86",
              out_dir: "vc_dll",
              vcvarsall: "amd64_x86"
            }
          - {
              target: "i686-windows-msvc",
              runs-on: "windows-2019",
              library: "static",
              shared: "0",
              arch: "x86",
              cpu: "x86",
              out_dir: "vc_lib",
              vcvarsall: "amd64_x86"
            }

    name: ${{ matrix.job.target }} - ${{ matrix.job.library }}

    steps:
      - name: Build Check
        id: build-check
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            export BUILD_VERSION_V=${GITHUB_REF##*/v}
            export BUILD_VERSION="${BUILD_VERSION_V#v}"
            echo "version=${BUILD_VERSION}" >> $GITHUB_OUTPUT
            echo "build=true" >> $GITHUB_OUTPUT
            echo "webview2=${DEFAULT_WEBVIEW2_VERSION}" >> $GITHUB_OUTPUT
          else
            export BUILD_VERSION_V=${{ inputs.verison }}
            export BUILD_VERSION="${BUILD_VERSION_V#v}"
            echo "version=${BUILD_VERSION}" >> $GITHUB_OUTPUT

            if [ "${{ matrix.job.target }}" == "aarch64-windows-msvc" ]; then
              echo "build=${{ inputs.build_arm64 }}" >> $GITHUB_OUTPUT
            fi

            if [ "${{ matrix.job.target }}" == "x86_64-windows-msvc" ]; then
              echo "build=${{ inputs.build_x86_64 }}" >> $GITHUB_OUTPUT
            fi

            if [ "${{ matrix.job.target }}" == "i686-windows-msvc" ]; then
              echo "build=${{ inputs.build_i686 }}" >> $GITHUB_OUTPUT
            fi

            if [ "${{ inputs.webview2_version }}" == "" ]; then
              echo "webview2=${DEFAULT_WEBVIEW2_VERSION}" >> $GITHUB_OUTPUT
            else
              echo "webview2=${{ inputs.webview2_version }}" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Visual Studio Dev Cmd
        if: steps.build-check.outputs.build == 'true'
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.job.vcvarsall }}

      - name: Compile wxWidgets
        if: steps.build-check.outputs.build == 'true'
        run: |
          $WXWIDGETS_VERSION="${{ steps.build-check.outputs.version }}"
          Invoke-WebRequest -Uri "https://github.com/wxWidgets/wxWidgets/releases/download/v${WXWIDGETS_VERSION}/wxWidgets-${WXWIDGETS_VERSION}.zip" -OutFile "wxWidgets-${WXWIDGETS_VERSION}.zip"
          Remove-Item -LiteralPath wxWidgets -Force -Recurse -ErrorAction SilentlyContinue
          New-Item -ItemType Directory -Path wxWidgets -Force
          Expand-Archive "wxWidgets-${WXWIDGETS_VERSION}.zip" -DestinationPath ./wxWidgets -Force

          cd wxWidgets/3rdparty
          Invoke-WebRequest -Uri "https://www.nuget.org/api/v2/package/Microsoft.Web.WebView2/${{ steps.build-check.outputs.webview2 }}" -OutFile "webview2-${{ steps.build-check.outputs.webview2 }}.zip"
          Remove-Item -LiteralPath webview2 -Force -Recurse -ErrorAction SilentlyContinue
          New-Item -ItemType Directory -Path webview2 -Force
          Expand-Archive "webview2-${{ steps.build-check.outputs.webview2 }}.zip" -DestinationPath ./webview2 -Force
          cd ..

          $file="./include/wx/msw/setup.h"
          $tmp = (Get-Content $file) -replace '#define wxUSE_POSTSCRIPT(\s+)(\d+)', '#define wxUSE_POSTSCRIPT 1' ` -replace '#define wxUSE_WEBVIEW(\s+)(\d+)', '#define wxUSE_WEBVIEW 1' ` -replace '#define wxUSE_WEBVIEW_EDGE (\s+)(\d+)', '#define wxUSE_WEBVIEW_EDGE 1'
          Set-Content -Value $tmp -Path $file
          ((Get-Content $file) -join "`n") + "`n" | Set-Content -NoNewline $file

          cd build/msw
          nmake TARGET_CPU=${{ matrix.job.cpu }} BUILD=release SHARED=${{ matrix.job.shared }} DIR_SUFFIX_CPU= -f makefile.vc

      - name: Create tarball
        if: steps.build-check.outputs.build == 'true'
        run: |
          Remove-Item -LiteralPath artifacts -Force -Recurse -ErrorAction SilentlyContinue
          New-Item -ItemType Directory -Path artifacts -Force
          tar -czf "./artifacts/wxWidgets-${{ matrix.job.library }}-${{ matrix.job.target }}.tar.gz" -C ./wxWidgets/lib/${{ matrix.job.out_dir }} .

      - name: SHA256
        if: steps.build-check.outputs.build == 'true'
        shell: bash
        run: |
          cd ./artifacts
          export FILENAME="wxWidgets-${{ matrix.job.library }}-${{ matrix.job.target }}.tar.gz"
          sha256sum "${FILENAME}" | tee "${FILENAME}.sha256"

      - name: Upload binaries
        uses: softprops/action-gh-release@v1
        if: steps.build-check.outputs.build == 'true'
        with:
          tag_name: v${{ steps.build-check.outputs.version }}
          name: v${{ steps.build-check.outputs.version }}
          files: |
            artifacts/wxWidgets-*.tar.gz
            artifacts/wxWidgets-*.sha256
